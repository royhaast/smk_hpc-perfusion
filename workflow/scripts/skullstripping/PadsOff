#!/bin/bash

################################################################################
#
# PREPARATIONS
#
################################################################################

if [[ ${#ANTSPATH} -le 3 ]]; then
    setPath >&2
fi

ANTS=${ANTSPATH}/antsRegistration

if [[ ! -s ${ANTS} ]]; then
    echo "antsRegistration can't be found. Please (re)define $ANTSPATH in your environment."
    exit
fi

SCRIPT_LOCATION=$(which FaceOff)
SCRIPT_DIR=$(dirname "${SCRIPT_LOCATION}")
TEMPLATE_DIR="/scratch/rhaast/HPC_perfusion/resources"

################################################################################
# Simple formatting

bold=$(tput bold)
normal=$(tput sgr0)

################################################################################

function Help() {
    cat <<HELP

Usage:

$(basename $0) ${bold}-i${normal} T1w_image.nii.gz ${bold}-n${normal} number of threads ${bold}-s${normal} use SyN

--------------------------------------------------------------------------------
Input arguments:

     -i:  T1w input dataset (e.g. T1w.nii.gz)

     -n:  number of threads (default = 12)

     -s:  (optional) use additional SyN stage (default = 1)

--------------------------------------------------------------------------------

Example:

$(basename $0) -i T1w.nii.gz -n 12

--------------------------------------------------------------------------------
Script was created by: Sriranga Kashyap (03-2020)
--------------------------------------------------------------------------------
Requires ANTs to be installed and $ANTSPATH defined in your environment.
--------------------------------------------------------------------------------
ANTs can be downloaded here: https://github.com/ANTsX/ANTs
References:
    1) http://www.ncbi.nlm.nih.gov/pubmed/20851191
    2) http://www.frontiersin.org/Journal/10.3389/fninf.2013.00039/abstract
--------------------------------------------------------------------------------

HELP
    exit 1
}

################################################################################

function reportParameters() {
    cat <<REPORTPARAMETERS

--------------------------------------------------------------------------------
    ${bold} 0. Initialised with $n_threads threads ${normal}
--------------------------------------------------------------------------------
    ANTs installation found :   ${bold} $ANTSPATH ${normal} 
    FaceOff location        :   ${bold} $SCRIPT_DIR ${normal}
    Input data              :   ${bold} $input_file ${normal}
    Using SyN?              :   ${bold} $syn ${normal}
    Deface mask (output)    :   ${bold} $OUTPUT_MASK_NAME ${normal}
    Defaced data (output)   :   ${bold} $OUTPUT_NAME ${normal}
--------------------------------------------------------------------------------

REPORTPARAMETERS
}

################################################################################

if [[ "$1" == "-h" || $# -eq 0 ]]; then
    Help >&2
fi

################################################################################
#
# DEFAULTS
#
################################################################################

interpolation_type=GenericLabel
n_threads=8

################################################################################
#
# PARSE INPUT ARGUMENTS
#
################################################################################

while getopts "h:i:n:s:" OPT; do
    case $OPT in
    h) #help
        Help
        exit 0
        ;;
    i) # input
        input_file=$OPTARG
        ;;
    n) # transformation type
        n_threads=$OPTARG
        ;;
    s) # force syn step
        force_syn=$OPTARG
        ;;
    \?) # report error
        echo "$HELP" >&2
        exit 1
        ;;
    esac
done

################################################################################
#
# SET NUMBER OF THREADS
#
################################################################################

ORIGINALNUMBEROFTHREADS=${ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS}
ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS=$n_threads
export ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS

################################################################################
#
# NO COMPRESSION PERHAPS
#
################################################################################

if [ "${input_file#*.}" == "nii" ]; then

    OUTPUT_MASK_NAME=${input_file%.*}_dePadMask.nii
    OUTPUT_NAME=${input_file%.*}_dePadded.nii

else

    OUTPUT_MASK_NAME=${input_file%.*.*}_dePadMask.nii.gz
    OUTPUT_NAME=${input_file%.*.*}_dePadded.nii.gz

fi

if [ -z "$force_syn" ]; then
    force_syn=1
    syn="yes"
else
    force_syn=0
    syn="no"
fi

################################################################################
#
# REPORT INPUT PARAMETERS
#
################################################################################

reportParameters

################################################################################
#
# MAP TO TEMPLATE
#
################################################################################

start_time0=$(date +%s)

${ANTSPATH}/antsAI \
    --dimensionality 3 \
    --random-seed 42 \
    --transform AlignCentersOfMass \
    --metric MI[ $TEMPLATE_DIR/OASIS_T1w.nii.gz , $input_file , 32 , Regular , 0.25 ] \
    --output $TEMPLATE_DIR/REG_INPUT_TO_TEMP_INIT.mat \
    --verbose 1

echo "  ${bold} 1. Mapped to template.    ${normal}"
echo "--------------------------------------------------------------------------------"

if [ $force_syn -eq 1 ]; then
    echo "  ${bold} Additional SyN stage will be used. ${normal}"
    echo " "

    ${ANTSPATH}/antsRegistration \
        --verbose 1 \
        --random-seed 42 \
        --dimensionality 3 \
        --float 0 \
        --collapse-output-transforms 1 \
        --output [ $TEMPLATE_DIR/REG_INPUT_TO_TEMP_ , 1 , 1 ] \
        --interpolation BSpline[4] \
        --use-histogram-matching 1 \
        --winsorize-image-intensities [ 0.005,0.995 ] \
        --masks [ $TEMPLATE_DIR/OASIS_registrationMask.nii.gz , 1 ] \
        --initial-moving-transform $TEMPLATE_DIR/REG_INPUT_TO_TEMP_INIT.mat \
        --transform Rigid[ 0.1 ] \
        --metric Mattes[ $TEMPLATE_DIR/OASIS_T1w.nii.gz , $input_file , 1 , 32 , Regular , 0.25 ] \
        --convergence [ 1000x500x250,1e-6,10 ] \
        --shrink-factors 4x2x1 \
        --smoothing-sigmas 3x2x1vox \
        --transform Affine[ 0.1 ] \
        --metric Mattes[ $TEMPLATE_DIR/OASIS_T1w.nii.gz , $input_file , 1 , 32 , Regular , 0.25 ] \
        --convergence [ 1000x500x250,1e-6,10 ] \
        --shrink-factors 4x2x1 \
        --smoothing-sigmas 3x2x1vox \
        --transform SyN[ 0.1,3,0 ] \
        --metric MI[ $TEMPLATE_DIR/OASIS_T1w.nii.gz , $input_file , 1 , 2 ] \
        --convergence [ 20x10x5,1e-6,10 ] \
        --shrink-factors 4x2x1 \
        --smoothing-sigmas 2x1x0vox

    echo "  ${bold} 1. Mapped to template.    ${normal}"
    echo "--------------------------------------------------------------------------------"

    ################################################################################
    #
    # APPLY TRANSFORMS
    #
    ################################################################################

    ${ANTSPATH}/antsApplyTransforms \
        --dimensionality 3 \
        --interpolation GenericLabel \
        --reference-image $input_file \
        --input $TEMPLATE_DIR/OASIS_dePadMask.nii.gz \
        --output $OUTPUT_MASK_NAME \
        --transform $TEMPLATE_DIR/REG_INPUT_TO_TEMP_1InverseWarp.nii.gz \
        --transform [ $TEMPLATE_DIR/REG_INPUT_TO_TEMP_0GenericAffine.mat , 1 ] \
        --verbose 0

    echo "  ${bold} 2. Deface mask created.    ${normal}"
    echo "--------------------------------------------------------------------------------"

else

    ${ANTSPATH}/antsRegistration \
        --verbose 1 \
        --random-seed 42 \
        --dimensionality 3 \
        --float 0 \
        --collapse-output-transforms 1 \
        --output [ $TEMPLATE_DIR/REG_INPUT_TO_TEMP_ , 1 , 1 ] \
        --interpolation BSpline[4] \
        --use-histogram-matching 1 \
        --winsorize-image-intensities [ 0.005,0.995 ] \
        --masks [ $TEMPLATE_DIR/OASIS_registrationMask.nii.gz , 1 ] \
        --initial-moving-transform $TEMPLATE_DIR/REG_INPUT_TO_TEMP_INIT.mat \
        --transform Rigid[ 0.1 ] \
        --metric Mattes[ $TEMPLATE_DIR/OASIS_T1w.nii.gz , $input_file , 1 , 32 , Regular , 0.25 ] \
        --convergence [ 1000x500x250,1e-6,10 ] \
        --shrink-factors 4x2x1 \
        --smoothing-sigmas 3x2x1vox \
        --transform Affine[ 0.1 ] \
        --metric Mattes[ $TEMPLATE_DIR/OASIS_T1w.nii.gz , $input_file , 1 , 32 , Regular , 0.25 ] \
        --convergence [ 1000x500x250,1e-6,10 ] \
        --shrink-factors 4x2x1 \
        --smoothing-sigmas 3x2x1vox

    echo "  ${bold} 1. Mapped to template.    ${normal}"
    echo "--------------------------------------------------------------------------------"

    ################################################################################
    #
    # APPLY TRANSFORMS
    #
    ################################################################################

    ${ANTSPATH}/antsApplyTransforms \
        --dimensionality 3 \
        --interpolation GenericLabel \
        --reference-image $input_file \
        --input $TEMPLATE_DIR/OASIS_dePadMask.nii.gz \
        --output $OUTPUT_MASK_NAME \
        --transform [ $TEMPLATE_DIR/REG_INPUT_TO_TEMP_0GenericAffine.mat , 1 ] \
        --verbose 1

    echo "  ${bold} 2. Deface mask created.    ${normal}"
    echo "--------------------------------------------------------------------------------"

fi

# Invert DePadMask
${ANTSPATH}/ImageMath \
    3 \
    $OUTPUT_MASK_NAME \
    Neg \
    $OUTPUT_MASK_NAME

${ANTSPATH}/ImageMath \
    3 \
    $OUTPUT_NAME \
    m \
    $input_file \
    $OUTPUT_MASK_NAME

echo "  ${bold} 3. Defacing completed.    ${normal}"
echo "--------------------------------------------------------------------------------"

end_time0=$(date +%s)
nettime0=$(expr $end_time0 - $start_time0)

################################################################################
#
# CLEAN UP
#
################################################################################

rm $TEMPLATE_DIR/REG_INPUT_TO_TEMP_*.*

################################################################################
#
# DISPLAY DONE
#
################################################################################

echo "  ${bold} 4. FaceOff ended. It took $(($nettime0 / 3600))h:$(($nettime0 % 3600 / 60))m:$(($nettime0 % 60))s.    ${normal}"
echo "================================================================================"
