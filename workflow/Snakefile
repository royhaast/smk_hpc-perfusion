from os.path import join
from glob import glob
import pandas as pd

configfile: 'config/config.yml'

#load participants.tsv file (list of HCP subject IDs),
df = pd.read_csv(config['participants_tsv'], dtype=str)
subjects = df.participant_id.to_list() 
#subjects = ['01','02','03','04','05','06','07','08','09','10','11']

wildcard_constraints:
    subject="[0-9]+",
    asl_parameter="CBF|PWI|M0|tSNR",
    mp2rage_parameter="T1|T1w",
    H="Lflip|R"

rule all:
    input:
        #expand('results/autotop-dev/results/sub-{subject}/anat/sub-{subject}_space-T1w_desc-subfields_modality-segT2w_template-CITI168_dseg.nii.gz', subject=subjects),
        #expand('results/vasculature/sub-{subject}/{H}/sub-{subject}_TOF_{H}_n4_stedi_centerdia_clean.nii.gz', subject=subjects, H=['Lflip','R']),
        expand('results/surface_maps/group/sub-group_{parameter}_LR_avg.nativecrop.shape.gii', parameter=config['parameters']),

def collect_input(wildcards):
    subject = '{wildcards.subject}'.format(wildcards=wildcards)
    deriv = config['data']['mp2rage_correction']

    return {
        'inv1': join(deriv,'anat/sub-{s}_acq-MP2RAGE_inv-1_part-mag_run-01.nii.gz'.format(s=subject)),
        'inv2': join(deriv,'anat/sub-{s}_acq-MP2RAGE_inv-2_part-mag_run-01.nii.gz'.format(s=subject)),
        't1': join(deriv,'anat/sub-{s}_acq-MP2RAGE_run-01_corrT1_clean.nii.gz'.format(s=subject)),
        't1w': join(deriv,'anat/sub-{s}_acq-MP2RAGE_run-01_corrUNI_clean.nii.gz'.format(s=subject))
        }

# Common rules for mapping operations
include: 'rules/common.smk'

# Will do MP2RAGE B1+ correction, MPRAGEise, skullstripping, 
# standard FreeSurfer and prepare for mapping onto hippocampus
include: 'rules/mp2rage.smk'

# Unfold hippocampus
include: 'rules/autotop.smk'
include: 'rules/surfaces.smk'
include: 'rules/t2w.smk'

# Will prepare other data for mapping onto hippocampus 
include: 'rules/perfusion.smk'
include: 'rules/tof.smk'

# Extract morphological features
include: 'rules/morphology.smk'